<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--扫描包-->
    <context:component-scan base-package="com.cz.action"/>

    <!--视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!-- 配置第二个视图解析器 -->
    <!--<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="1"></property>
    </bean>-->
    <!--解决静态资源被拦截问题-->
    <mvc:default-servlet-handler/>
    <!--开启mvc注解-->
    <mvc:annotation-driven/>
    <!--自定义全局转换器-->
    <!--<mvc:annotation-driven conversion-service="conversionService"/>-->
    <!--<bean name="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <ref bean="dateConverter"/>
            </set>
        </property>
    </bean>-->

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="i18n"/>
        <!--默认编码-->
        <property name="defaultEncoding" value="UTF-8"/>
        <!--如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称显示-->
 <!--       <property name="useCodeAsDefaultMessage" value="true"/>-->
    </bean>

    <!--配置LocaleChangeInterceptor 主要用于获取请求中的locale信息，将期转为Locale对像，获取LocaleResolver对象-->
    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
    </mvc:interceptors>
    <!--配置SessionLocaleResolver用于将Locale对象存储于Session中供后续使用
    这里有个特别需要注意bean id的配置，值必须为localeResolver否则，会报错-->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"/>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--内存中最大值-->
        <property name="defaultEncoding" value="UTF-8"/>
        <!--文件大小-->
        <property name="maxUploadSize" value="10485760000"/>
        <!--内存中最大值-->
        <property name="maxInMemorySize" value="40960"/>
    </bean>
    <mvc:interceptors>
        <mvc:interceptor>
            <!--拦截器mapping 符合的才会执行拦截器,
                /**的意思是所有文件夹及里面的子文件夹
                /*是所有文件夹，不含子文件夹
                /是web项目的根目录
            -->
            <mvc:mapping path="/**"/>
            <!--对应匹配的请求，我们要使用的拦截器-->
            <bean class="com.cz.intercepters.LoginIntercepter"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.cz.intercepters.Interceptor2"/>
        </mvc:interceptor>
    </mvc:interceptors>
<!--    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        &lt;!&ndash; 为所有的异常定义默认的异常处理页面，exceptionMappings未定义的异常使用本默认配置 &ndash;&gt;
        <property name="defaultErrorView" value="error"/>
        <property name="exceptionAttribute" value="ex"/>
        &lt;!&ndash;
    　　　　定义需要特殊处理的异常，用类名或完全路径名作为key，异常页文件名作为值，
    　　　　将不同的异常映射到不同的页面上。
　　      &ndash;&gt;
        <property name="exceptionMappings">
            <props>
                <prop key="java.io.IOException">views/error/ioexp</prop>
                <prop key="java.sql.SQLException">views/error/sqlexp</prop>
                <prop key="java.lang.ArrayIndexOutOfBoundsException">views/error/arrayException</prop>
            </props>
        </property>
    </bean>-->
</beans>